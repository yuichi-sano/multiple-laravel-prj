# For more information: https://laravel.com/docs/sail
version: '3'
services:
    service1:
        image: 'yuichisano/php8.0addjava'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${SERVICE1_APP_PORT:-5080}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            TZ: Asia/Tokyo
        volumes:
            - './service1/api:/var/www/html'
            - './database/flyway:/var/www/html/database/flyway'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - meilisearch
            - selenium
            - postgres
    service1-cli:
        build:
            context: ./service1/client/docker
            dockerfile: Dockerfile
        image: 'service1-cli'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '18080:18080'
        volumes:
            - './service1/client:/app/'
            - 'service1-cli-node-modules:/app/node_modules'
        networks:
            - sail
        stdin_open: true
        tty: true
        environment:
            - CHOKIDAR_USEPOLLING=true
        depends_on:
            - selenium
    mysql:
        image: 'mysql:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sailmysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sailredis:/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'sailmeilisearch:/data.ms'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
            retries: 3
            timeout: 5s
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
    selenium:
        image: 'selenium/standalone-chrome'
        volumes:
            - '/dev/shm:/dev/shm'
        networks:
            - sail
    postgres:
        build: "./database/flyway/docker/make"
        ports:
            - "5433:5432"
        restart: always
        environment:
            POSTGRES_DB: sample
            POSTGRES_USER: sample
            POSTGRES_PASSWORD: weak-password
            TZ: "Asia/Tokyo"
            POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=ja_JP.UTF-8"
        command: 'postgres -c config_file="/etc/postgresql.conf"'
        volumes:
            - ./database/flyway/docker/init.sh:/docker-entrypoint-initdb.d/init.sh
            - .//database/flyway/docker/conf/postgresql.conf:/etc/postgresql.conf
            - postgres-data:/var/lib/postgresql/data
        networks:
            - sail
    squid-proxy:
        image: zakihmkc/squid
        ports:
            - "18989:8080"
        networks:
            - sail
    locust-master:
        image: locustio/locust
        ports:
              - "18089:8089"
        volumes:
            - ./locust/docker:/mnt/locust
            - ./locust/docker/conf/limits.conf:/etc/security/limits.conf
        command: -f /mnt/locust/locustfile.py --master
        networks:
            - sail
    locust-worker:
        image: locustio/locust
        volumes:
            - ./locust/docker:/mnt/locust
            - ./locust/docker/conf/limits.conf:/etc/security/limits.conf
        command: -f /mnt/locust/locustfile.py --worker --master-host locust-master
        networks:
            - sail
    locust-worker-2:
        image: locustio/locust
        volumes:
            - ./locust/docker:/mnt/locust
            - ./locust/docker/conf/limits.conf:/etc/security/limits.conf
        command: -f /mnt/locust/locustfile.py --worker --master-host locust-master
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sailmysql:
        driver: local
    sailredis:
        driver: local
    sailmeilisearch:
        driver: local
    # データベースのデータ保存用Volume
    postgres-data:
        external: true
    service1-cli-node-modules:
        driver: local
