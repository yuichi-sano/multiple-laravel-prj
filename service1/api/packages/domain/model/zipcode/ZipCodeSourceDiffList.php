<?php

declare(strict_types=1);

namespace packages\domain\model\zipcode;

use Ramsey\Collection\Collection;
use Traversable;

class ZipCodeSourceDiffList extends Collection
{
    /**
     * @return ZipCodeSourceDiff[]
     */
    public function __construct()
    {
        parent::__construct(ZipCodeSourceDiff::class);
    }

    /**
     * @return ZipCodeSourceDiff[]
     */
    public function getIterator(): Traversable
    {
        return parent::getIterator(); // TODO: Change the autogenerated stub
    }

    /**
     * 連想配列にコンバートします
     * @return array
     */
    public function toArray(): array
    {
        $toArray = [];
        foreach ($this->data as $key => $data) {
            $toArray[$key] = $data;
        }
        return $toArray;
    }

    public static function create(array $data)
    {
        $instance = new self();
        $needContinue = false;
        $mergeRows = [];
        foreach ($data as $row) {
            $old = array_key_exists('old', $row) ? $row['old'] : '';
            $new = array_key_exists('new', $row) ? $row['new'] : '';
            $diff = new ZipCodeSourceDiff(
                $old,
                $new
            );
            $instance->add($diff);
        }
        return $instance;
    }
}
