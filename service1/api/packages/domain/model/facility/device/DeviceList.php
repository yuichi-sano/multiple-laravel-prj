<?php

declare(strict_types=1);

namespace packages\domain\model\facility\device;

use packages\domain\basic\page\Offset;
use packages\domain\basic\page\PerPage;
use Ramsey\Collection\Collection;
use Traversable;

class DeviceList extends Collection
{
    /**
     * @param Device[]|null $list
     * @return Device[]
     */
    public function __construct(array $list = null)
    {
        parent::__construct(Device::class);

        if (!empty($list)) {
            $this->setList($list);
        }
    }

    /**
     * @param array $list
     * @return void
     */
    private function setList(array $list)
    {
        foreach ($list as $item) {
            $this->add($item);
        }
    }

    /**
     * @return Device[]
     */
    public function getIterator(): Traversable
    {
        return parent::getIterator(); // TODO: Change the autogenerated stub
    }

    /**
     * 連想配列にコンバートします
     * @return array
     */
    public function toArray(): array
    {
        return parent::toArray();
    }

    /**
     * ページング
     * 指定のoffset,perpageにて配列を組直し、自身のインスタンスを生成してリターン
     * @param int $offset 配列開始位置
     * @param int $limit 取り出し数
     * @return $this
     */
    public function paging(Offset $offset, PerPage $limit): self
    {
        $paging = array_slice($this->toArray(), $offset->getValue(), $limit->getValue());
        return new self($paging);
    }
}
